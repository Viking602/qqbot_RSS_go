package config

import (
	log "github.com/sirupsen/logrus"
	"gopkg.in/yaml.v2"
	"io/ioutil"
	"os"
)

type AutoGenerated struct {
	Mysql Mysql `yaml:"mysql"`
	QqBot QqBot `yaml:"qq_bot"`
}

type Mysql struct {
	Db       string `yaml:"db"`
	User     string `yaml:"user"`
	Password string `yaml:"password"`
	Host     string `yaml:"host"`
	Port     string `yaml:"port"`
}

type QqBot struct {
	Port string `yaml:"port"`
	Env  bool   `yaml:"env"`
}

type GetConfigData struct {
	DbUser     string `json:"dbUser"`
	DbPassWord string `json:"dbPassWord"`
	DbHost     string `json:"dbHost"`
	DbPort     string `json:"dbPort"`
	DbName     string `json:"dbName"`
	BotPort    string `json:"botPort"`
}

var Setting AutoGenerated

func InitConfig(filename string) {
	log.SetReportCaller(false)
	log.SetFormatter(&log.TextFormatter{
		//以下设置只是为了使输出更美观
		DisableColors:   true,
		TimestampFormat: "2006-01-02 15:03:04",
	})
	config, _ := ioutil.ReadFile(filename)
	err := yaml.Unmarshal(config, &Setting)
	if err != nil {
		log.Fatal("初始化配置失败", err.Error())
	}
}

func GetConfig() map[string]interface{} {
	var data map[string]interface{}
	data = make(map[string]interface{})
	if Setting.QqBot.Env == false {
		dbUser := Setting.Mysql.User
		dbPassWord := Setting.Mysql.Password
		dbHost := Setting.Mysql.Host
		dbPort := Setting.Mysql.Port
		dbName := Setting.Mysql.Db
		botPort := Setting.QqBot.Port
		data["dbUser"] = dbUser
		data["dbPassWord"] = dbPassWord
		data["dbHost"] = dbHost
		data["dbPort"] = dbPort
		data["dbName"] = dbName
		data["botPort"] = botPort
		return data
	} else {
		dbUser := os.Getenv("RSS_MYSQL_USER")
		dbPassWord := os.Getenv("RSS_MYSQL_PASSWORD")
		dbHost := os.Getenv("RSS_MYSQL_HOST")
		dbPort := os.Getenv("RSS_MYSQL_PORT")
		dbName := os.Getenv("RSS_MYSQL_NAME")
		botPort := os.Getenv("RSS_BOT_PORT")
		data["dbUser"] = dbUser
		data["dbPassWord"] = dbPassWord
		data["dbHost"] = dbHost
		data["dbPort"] = dbPort
		data["dbName"] = dbName
		data["botPort"] = botPort
		return data
	}
}
